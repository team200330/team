<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team.mapper.TaskMapper">

	<insert id="insertTaskList" parameterType="TaskList">
		INSERT INTO task_list (list_name, project_no)
		VALUES ( #{listName}, #{projectNo} )
	</insert>
	
	<insert id="insertTask" parameterType="Task">
		INSERT INTO task (list_no, content, writer, create_date)
		VALUES ( #{listNo}, #{content}, #{writer}, NOW())	
		<selectKey keyProperty="taskNo" order="AFTER" resultType="int">
		SELECT LAST_INSERT_ID();
		</selectKey>
	</insert>

	<select id="selectTaskList" resultMap="taskListMap" parameterType="int">
		SELECT *
		FROM task_list
		WHERE deleted = '0' AND project_no = #{projectNo}
	</select>
	
	<select id="selectTask" resultMap="taskMap">
		SELECT *
		FROM task
		WHERE deleted = '0'
		ORDER BY completed
	</select>
	
	<resultMap type="Task" id="taskMap">
		<id column="task_no" property="taskNo"/>
		<result column="list_no" property="listNo"/>
		<result column="content" property="content"/>
		<result column="writer" property="writer"/>
		<result column="create_date" property="createDate"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="completed_date" property="completedDate"/>
		<result column="completed_p" property="completedP"/>
	</resultMap>
	
	<resultMap type="TaskList" id="taskListMap">
		<id column="list_no" property="listNo"/>
		<result column="project_no" property="projectNo"/>
		<result column="list_name" property="listName"/>
	</resultMap>
	
	<delete id="deleteTaskList" parameterType="int">
		UPDATE task_list
		SET deleted = '1' 
		WHERE list_no = #{ listNo }
	</delete>
		
	<delete id="deleteTask" parameterType="int">
		UPDATE task
		SET deleted = '1'
		WHERE task_no = #{ taskNo }
	</delete>
	
	<update id="updateCompleted" parameterType="hashmap">
		UPDATE task
		SET completed = #{ completed }, completed_date = #{ completedDate }
		WHERE task_no = #{ taskNo } 
	</update>
	
	<update id="updateTaskTimes" parameterType="hashmap">
		UPDATE task
		<choose>
			<when test="timeFrom == 'pickerFrom'">
				SET start_date = #{ anyDate }
			</when>
			<otherwise>
				SET end_date = #{ anyDate }
			</otherwise>
		</choose>
		WHERE task_no = #{ taskNo }
	</update>
		
	<select id="selectTaskByTaskNo" parameterType="int" resultMap="taskMap">
		SELECT * FROM task
		WHERE task_no = #{taskNo}
	</select>	
	
	<select id="finishTaskListByProjectMember" parameterType="com.team.vo.ProjectMember" resultType="int">
		select COUNT(*) from project p
		inner join project_member pm
		on p.project_no = pm.project_no		
		inner join task_list tl
		on tl.project_no = p.project_no		
		inner join task t
		on t.list_no = tl.list_no		
		inner join workspace w
		on w.workspace_no = p.workspace_no		
		where pm.email = #{ email } 
		AND p.project_no = #{ projectNo }
		AND end_date IS not NULL;
	</select>	
	
	<select id="notfinishTaskListByProjectMember" parameterType="com.team.vo.ProjectMember" resultType="int">
		select COUNT(*) from project p
		inner join project_member pm
		on p.project_no = pm.project_no		
		inner join task_list tl
		on tl.project_no = p.project_no		
		inner join task t
		on t.list_no = tl.list_no		
		inner join workspace w
		on w.workspace_no = p.workspace_no		
		where pm.email = #{ email } 
		AND p.project_no = #{ projectNo }
		AND end_date IS NULL;
	</select>
	
	<select id="allTaskListByProjectMember" parameterType="com.team.vo.ProjectMember" resultType="int">
		select COUNT(*) from project p
		inner join project_member pm
		on p.project_no = pm.project_no		
		inner join task_list tl
		on tl.project_no = p.project_no		
		inner join task t
		on t.list_no = tl.list_no		
		inner join workspace w
		on w.workspace_no = p.workspace_no		
		where pm.email = #{ email } 
		AND p.project_no = #{ projectNo }
	</select>
	
	<select id="TaskListByProjectMember" parameterType="com.team.vo.ProjectMember" resultType="com.team.vo.Task">
		select * from project p
		inner join project_member pm
		on p.project_no = pm.project_no		
		inner join task_list tl
		on tl.project_no = p.project_no		
		inner join task t
		on t.list_no = tl.list_no		
		inner join workspace w
		on w.workspace_no = p.workspace_no		
		where pm.email = #{ email } 
		AND p.project_no = #{ projectNo }
	</select>
	
	<select id="endDateNullTaskListByProjectMember" parameterType="com.team.vo.ProjectMember" resultType="int">
		select COUNT(*) from project p
		inner join project_member pm
		on p.project_no = pm.project_no		
		inner join task_list tl
		on tl.project_no = p.project_no		
		inner join task t
		on t.list_no = tl.list_no		
		inner join workspace w
		on w.workspace_no = p.workspace_no
		where pm.email = #{ email } 
		AND p.project_no = #{ projectNo }
		AND t.end_date IS NULL;
	</select>
		
		
	
	
	
	
	
	
	
	
	
	

	<insert id="insertTask2" parameterType="Task">
		INSERT INTO task (list_no, content, writer, start_date, end_date, create_date)
		VALUES ( #{listNo}, #{content}, #{writer}, #{startDate}, #{endDate} , NOW())	
	</insert>
	
	<select id="countCompletedTasks" parameterType="hashmap" resultType="int">
		SELECT COUNT(*)
		FROM task t
		INNER JOIN task_list l ON t.list_no = l.list_no
		WHERE l.project_no = #{projectNo}
		AND t.deleted = 0 AND l.deleted = 0
			<choose>
				<when test="completed == true">AND t.completed = 1</when>
				<when test="pastDeadline == true"><![CDATA[ AND t.end_date < #{endDate}]]></when>
				<when test="hasDeadline == true">AND t.end_date IS NOT NULL</when>
			</choose>
			<if test="email != null">AND t.writer = #{email}</if>
	</select>
	
	<select id="countTaskByCreatedDate" parameterType="hashmap" resultType="int">
		SELECT COUNT(*)
		FROM task t
		INNER JOIN task_list l ON t.list_no = l.list_no
		WHERE l.project_no = #{projectNo}
		AND t.deleted = 0 AND l.deleted = 0
		AND 
		<![CDATA[ create_date >= #{startDate} AND create_date <= #{endDate}]]>
		<if test='searchType == "completed"'>AND t.completed = 1</if>
	</select>
</mapper>