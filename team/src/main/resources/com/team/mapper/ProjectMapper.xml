<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team.mapper.ProjectMapper">
	
	<resultMap type="project" id="projectMap">
		<id column="project_no" property="projectNo" />
		<result column="workspace_no" property="workspaceNo" />
		<result column="project_name" property="projectName" />
		<result column="startdate" property="startdate" />
		<result column="content" property="content" />
		<result column="manager_email" property="managerEmail" />
		<result column="deleted" property="deleted" />
		<result column="pro_public" property="proPublic" />
		<result column="template_no" property="templateNo" />
		<result column="pro_no" property="proNo" />
	</resultMap>
	
	<resultMap type="ProjectMember" id="projectMemberMap">
		<result column="project_no" property="projectNo"/>
		<result column="email" property="email"/>
	</resultMap>
	
	<insert id="insertProject">
		INSERT INTO project ( project_name, content, manager_email, pro_public, template_no, workspace_no)
		VALUES ( #{projectName}, #{content}, "1@1", #{proPublic}, #{templateNo}, "6" )
	</insert>
	
	<select id="selectProject" resultMap="projectMap">
		<![CDATA[ SELECT * FROM project WHERE deleted = 0 ORDER BY project_no DESC ]]>
	</select>
	
	<select id="selectProject2" resultMap="projectMap">
		<![CDATA[ SELECT * FROM project WHERE deleted = 0 ORDER BY project_no DESC LIMIT 4 ]]>
	</select>
	
	<select id="selectProjectByWorkspaceNo" parameterType="int" resultMap="projectMap">
		SELECT * FROM project
		WHERE workspace_no = #{ workspaceNo } 
	</select>
	
	<update id="updateProjectNo" parameterType="hashmap">
		UPDATE project SET pro_no=#{ proNo } 
		WHERE project_no = #{ projectNo }
	</update>
	
	<select id="selectProjectByNo" parameterType="int" resultMap="projectMap">
		SELECT * FROM project
		WHERE project_no = #{ projectNo }
	</select>
	
	<select id="selectMemberByProjectNo" parameterType="int" resultMap="projectMemberMap">
		SELECT * FROM project_member
		WHERE project_no = #{ projectNo }
	</select>
	

	<sql id="searchCondition">
		<trim suffix="AND">
	    	<choose>
	    		<when test="searchType == 'T'.toString()">
	    			project_name LIKE '%'||#{searchKey}||'%'
	    		</when>
	    		<when test="searchType == 'C'.toString()">
	    			content LIKE '%'||#{searchKey}||'%'
	    		</when>
	    		<when test="searchType == 'TC'.toString()">
	    			( project_name LIKE '%'||#{searchKey}||'%' OR content LIKE '%'||#{searchKey}||'%' )
	    		</when>
	    		<when test="searchType == 'P'.toString()">
	    			pro_public LIKE '%'||#{searchKey}||'%'
	    		</when>
	    	</choose>
		</trim>
	</sql>
	
	<select id="selectPageing" parameterType="hashmap" resultMap="projectMap">
<!-- 		SELECT *
		FROM (
			  SELECT row_number() over(order by project_no) rnum,project_no,project_name, manager_email, startdate, pro_public, template_no, pro_no
		      FROM project
		      WHERE <include refid="searchCondition" /> deleted = '0'
		      AND <![CDATA[ project_no < #{ end } ]]>
		      ORDER BY project_no desc
		     ) project
		WHERE <![CDATA[ project_no >=  #{ beginningPageNo } ]]> -->
		
		<!-- SELECT *
		FROM (
				SELECT <![CDATA[ @rownum:=@rownum+1 rnum, A.* ]]>
				FROM project A,
					  <![CDATA[ (SELECT @rownum := 0 ) R ]]>
				WHERE 1=1 AND <include refid="searchCondition" /> deleted = '0'
				ORDER BY project_no DESC
				) list
		WHERE <![CDATA[ rnum >= #{ beginningPageNo } AND rnum <= #{ end } ]]> -->
	</select>
	<select id="selectProjectListCount" parameterType="hashmap" resultType="int" >
		SELECT COUNT(*) FROM project WHERE <include refid="searchCondition" /> deleted = '0' ORDER BY project_no DESC
	</select>



</mapper>





