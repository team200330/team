<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team.mapper.ProjectMapper">
	
	<resultMap type="project" id="projectMap">
		<id column="project_no" property="projectNo" />
		<result column="workspace_no" property="workspaceNo" />
		<result column="project_name" property="projectName" />
		<result column="startdate" property="startdate" />
		<result column="content" property="content" />
		<result column="manager_email" property="managerEmail" />
		<result column="deleted" property="deleted" />
		<result column="pro_public" property="proPublic" />
		<result column="template_no" property="templateNo" />
		<result column="pro_no" property="proNo" />
	</resultMap>
	
	<resultMap type="ProjectMember" id="projectMemberMap">
		<result column="project_no" property="projectNo"/>
		<result column="email" property="email"/>
	</resultMap>
	
	<resultMap type="WorkspaceMember" id="workspaceMemberMap">
		<id column="workspace_no" property="workspaceNo" />
		<result column="email" property="email" />
		<result column="type_no" property="typeNo" />
	</resultMap> 
	
 	<insert id="insertProject" parameterType="project">
		INSERT INTO project ( project_name, content, manager_email, pro_public, template_no, workspace_no)
		VALUES ( #{projectName}, #{content}, #{managerEmail}, #{proPublic}, #{templateNo}, #{workspaceNo} )
		<selectKey keyProperty="projectNo" order="AFTER" resultType="int">
			SELECT LAST_INSERT_ID();
		</selectKey>
	</insert>
	
<!--    	<insert id="insertProjectMember" parameterType="java.util.List">
		INSERT INTO project_member(project_no, email) VALUES
		<foreach collection="list" item="projectMember" index="index" separator=",">
			(#{projectMember.projectNo}, #{projectMember.email})
			 
		</foreach>
	</insert> -->
<!-- 	<insert id="insertProjectMember" parameterType="java.util.List">
		INSERT INTO project_member(project_no, email) 
		VALUES (#{projectMember.projectNo}, #{projectMember.email})
	</insert> -->
	
	<select id="selectProject" resultMap="projectMap" parameterType="hashmap" >
		<![CDATA[
		SELECT *
		FROM project p
		WHERE p.workspace_no = #{workspaceNo}
		ORDER BY project_no DESC
		]]>
		<!-- <![CDATA[ SELECT * FROM project WHERE deleted = 0 AND workspace_no = 6 ORDER BY project_no DESC ]]>
		<![CDATA[ SELECT * FROM project WHERE deleted = 0 AND workspace_no = #{workspace_no} ORDER BY project_no DESC; ]]> -->
	</select>
	
	<select id="selectProject2" resultMap="projectMap" parameterType="hashmap" >
		<![CDATA[ 
		SELECT *
		FROM project p
		WHERE p.workspace_no = #{workspaceNo}
		ORDER BY project_no DESC 
		LIMIT 4 
		]]>
		<!--  <![CDATA[ SELECT * FROM project WHERE deleted = 0 AND workspace_no = #{workspace_no} ORDER BY project_no DESC LIMIT 4 ]]> -->
	</select>
	
	<select id="selectProjectByWorkspaceNo" parameterType="int" resultMap="projectMap">
		SELECT * FROM project
		WHERE workspace_no = #{ workspaceNo } 
	</select>
	
	<update id="updateProjectNo" parameterType="hashmap">
		UPDATE project SET pro_no=#{ proNo } 
		WHERE project_no = #{ projectNo }
	</update>
	
	<update id="updateProject">
		UPDATE project SET project_name = #{projectName}, content = #{content}, pro_public = #{proPublic}, startdate = #{startdate}, deadline = #{deadline}, enddate = #{enddate}
		WHERE project_no = #{projectNo}
	</update>
	
	<select id="selectProjectByNo" parameterType="int" resultMap="projectMap">
		SELECT * FROM project
		WHERE project_no = #{ projectNo }
	</select>
	
	<select id="selectPageing" parameterType="hashmap" resultMap="projectMap">

	</select>
	
	<select id="selectProjectListCount" parameterType="hashmap" resultType="int" >
		SELECT COUNT(*) FROM project WHERE deleted = '0' ORDER BY project_no DESC
	</select>
	
	<select id="selectDetail" parameterType="int" resultMap="projectMap">
		SELECT * FROM project
		WHERE project_no = #{projectNo}	
	</select>

	<select id="selectLoginuserProjectMember" parameterType="hashmap" resultMap="projectMap">
	<![CDATA[
	SELECT * 
	FROM project p
	INNER JOIN project_member pm 
	ON p.project_no = pm.project_no
	WHERE deleted = '0' AND p.workspace_no = #{workspaceNo}
	ORDER BY p.project_no DESC
	]]>
	</select>
	
	<insert id="insertProjectMember">
		INSERT INTO project_member (project_no, email)
		VALUES ( #{projectNo}, #{email} )
	</insert>
	
	
	<select id="selectMemberByProjectNo" parameterType="int" resultMap="projectMemberMap">
		SELECT * FROM project_member
		WHERE project_no = #{ projectNo }
	</select>
	
<!-- 	<select id="selectProjectMember" parameterType="hashmap" resultMap="feedbackMap">
		SELECT DISTINCT wm.email FROM workspace_member wm
		INNER JOIN project p 
		ON p.workspace_no = wm.workspace_no
		WHERE 
			p.manager_email = 
			<choose>
				<when test="searchType == 'M'.toString()">
					(sender = #{email} OR email = #{email}) AND
				</when>
				<when test="searchType == 'S'.toString()">
					sender = #{email} AND
				</when>
				<when test="searchType == 'R'.toString()">
					email = #{email} AND
				</when>
				<when test="searchType == 'A'.toString()">
					email = #{email} AND opened = 1 AND
				</when>
				<when test="searchType == 'I'.toString()">
				(sender LIKE CONCAT('%',#{key},'%') OR 
				email LIKE CONCAT('%',#{key},'%') OR 
				f.content LIKE CONCAT('%',#{key},'%') ) AND
				</when>
			</choose>
		AND 
			deleted = '0' 
		AND 
			wm.workspace_no = 6
		ORDER BY p.project_no DESC;
			
		deleted = '0' AND workspace_no = #{workspaceNo}
		ORDER BY f.feedback_no DESC
	</select> -->


</mapper>





